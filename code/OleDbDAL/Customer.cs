///////////////////////////////////////////////////////////
//  Customer.cs
//  Implementation of the Class Customer
//  Generated by Enterprise Architect
//  Created on:      07-Ò»ÔÂ-2009 23:56:35
//  Original author: anaki
///////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.OleDb;
using System.Collections.Generic;
using TVMS.Model;
using TVMS.IDAL;
using TVMS.DBUtility;


namespace TVMS.OleDbDAL {
	public class Customer : ICustomer {

        private const string SQL_SELECT_CUSTOMERS = "SELECT CustomerId, Name, Address, Tel FROM TVMS_Customers";
        private const string SQL_SELECT_CUSTOMER = "SELECT CustomerId, Name, Address, Tel FROM TVMS_Customers WHERE CustomerId = @CustomerId";
        private const string SQL_INSERT_CUSTOMER = "INSERT INTO TVMS_Customers (Name, Address, Tel) VALUES (@Name, @Address, @Tel)";
        private const string SQL_UPDATE_CUSTOMER = "UPDATE TVMS_Customers SET Name = @Name, Address = @Address, Tel = @Tel WHERE CustomerId = @CustomerId";
        private const string SQL_DELETE_CUSTOMER = "DELETE FROM TVMS_Customers WHERE CustomerId = @CustomerId";
        private const string PARM_CUSTOMER_ID = "@CustomerId";
        private const string PARM_NAME = "@Name";
        private const string PARM_ADDRESS = "@Address";
        private const string PARM_TEL = "@Tel";

		public IList<CustomerInfo> GetCustomers(){

            IList<CustomerInfo> customers = new List<CustomerInfo>();

            using (OleDbDataReader rdr = OleDbHelper.ExecuteReader(OleDbHelper.ConnectionStringLocalTransaction, CommandType.Text, SQL_SELECT_CUSTOMERS, null))
            {
                while (rdr.Read())
                {
                    CustomerInfo cus = new CustomerInfo(rdr.GetInt32(0), rdr.GetString(1), rdr.GetString(2), rdr.GetString(3));
                    customers.Add(cus);
                }
            }
            return customers;
        }

		/// 
		/// <param name="customerId"></param>
		public CustomerInfo GetCustomer(int customerId){

            CustomerInfo customer = null;

            OleDbParameter parm = new OleDbParameter(PARM_CUSTOMER_ID, OleDbType.Integer);
            parm.Value = customerId;

            using (OleDbDataReader rdr = OleDbHelper.ExecuteReader(OleDbHelper.ConnectionStringLocalTransaction, CommandType.Text, SQL_SELECT_CUSTOMER, parm))
            {
                if (rdr.Read())
                    customer = new CustomerInfo(rdr.GetInt32(0), rdr.GetString(1), rdr.GetString(2), rdr.GetString(3));
                else
                    customer = new CustomerInfo();
            }
            return customer;
        }

		/// 
		/// <param name="customer"></param>
		public void Insert(CustomerInfo customer){

            OleDbParameter[] customerParms = GetCustomerParameters();

            customerParms[0].Value = customer.CustomerId;
            customerParms[1].Value = customer.Name;
            customerParms[2].Value = customer.Address;
            customerParms[3].Value = customer.Tel;

            int numInserted = OleDbHelper.ExecuteNonQuery(OleDbHelper.ConnectionStringLocalTransaction, CommandType.Text, SQL_INSERT_CUSTOMER, customerParms);
            if (numInserted != 1)
                throw new ApplicationException("DATA INTEGRITY ERROR ON CUSTOMER INSERT");
        }

		/// 
		/// <param name="customerId"></param>
		public void Delete(int customerId){

            OleDbParameter parm = new OleDbParameter(PARM_CUSTOMER_ID, OleDbType.Integer);
            parm.Value = customerId;

            int numDeleted = OleDbHelper.ExecuteNonQuery(OleDbHelper.ConnectionStringLocalTransaction, CommandType.Text, SQL_DELETE_CUSTOMER, parm);
            if (numDeleted != 1)
                throw new ApplicationException("DATA INTEGRITY ERROR ON CUSTOMER DELETE");
        }

		/// 
		/// <param name="customer"></param>
		public void Update(CustomerInfo customer){

            OleDbParameter[] customerParms = GetCustomerParameters();

            customerParms[0].Value = customer.CustomerId;
            customerParms[1].Value = customer.Name;
            customerParms[2].Value = customer.Address;
            customerParms[3].Value = customer.Tel;

            int numUpdated = OleDbHelper.ExecuteNonQuery(OleDbHelper.ConnectionStringLocalTransaction, CommandType.Text, SQL_UPDATE_CUSTOMER, customerParms);
            if (numUpdated != 1)
                throw new ApplicationException("DATA INTEGRITY ERROR ON CUSTOMER UPDATE");
        }

        private static OleDbParameter[] GetCustomerParameters()
        {
            OleDbParameter[] parms = OleDbHelper.GetCachedParameters(SQL_INSERT_CUSTOMER);

            if (parms == null)
            {
                parms = new OleDbParameter[] {
                    new OleDbParameter(PARM_CUSTOMER_ID, OleDbType.Integer),
                    new OleDbParameter(PARM_NAME, OleDbType.VarChar, 20),
                    new OleDbParameter(PARM_ADDRESS, OleDbType.VarChar, 60),
                    new OleDbParameter(PARM_TEL, OleDbType.VarChar, 20)
                };

                OleDbHelper.CacheParameters(SQL_INSERT_CUSTOMER, parms);
            }

            return parms;
        }
    }//end Customer

}//end namespace OleDbDAL